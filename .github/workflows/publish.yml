name: Publish Compose Multiplatform App

permissions:
  contents: write

on:
  release:
    types:
      - published

jobs:
  build-and-publish:
    name: Build and Publish Compose Multiplatform App
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build application (WIN, LINUX)
        if: matrix.os != 'macos-latest'
        run: |
          gradle packageDistributionForCurrentOs
        shell: bash
      - name: Build application (MacOS)
        if: matrix.os == 'macos-latest'
        run: |
          gradle packageDmg
        shell: bash
      - name: Create release artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p build/artifacts
          zip -r build/artifacts/linux-appimage.zip "app/build/compose/binaries/main/app"
        shell: bash

      - name: Create release artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir build\artifacts
          copy app\build\compose\binaries\main\app\*.msi build\artifacts\
        shell: cmd

      - name: Create release artifact (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p build/artifacts
          cp app/build/compose/binaries/main/dmg/app-1.0.0.dmg build/artifacts/
        shell: bash

      - name: Upload release assets (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SUPER_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: |
            build/artifacts/linux-appimage.zip
          asset_name: linux-appimage.zip
          asset_content_type: application/zip

      - name: Upload release assets (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SUPER_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: |
            build/artifacts/*.msi
          asset_name: windows-installer.msi
          asset_content_type: application/x-msi

      - name: Upload release assets (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SUPER_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: |
            build/artifacts/app-1.0.0.dmg
          asset_name: macos-installer.dmg
          asset_content_type: application/x-apple-diskimage